========================
How to use 1-my_list.py
========================
This module inherits a list and prints it in ascending order

Usage
=====

```print_sorted(...)`` add two numbers prints sorted list.



Check if MyList is a a subclasss of list
	>>> MyList = __import__('1-my_list').MyList
	>>> issubclass(MyList, list)
	True

check they type 
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

check if it prints sorted list
	>>> m = MyList([5, 2, 4, 1, 3])
	>>> m.print_sorted()
	[1, 2, 3, 4, 5]

check if you pass non list(tuple)
	>>> m = MyList((5, 2, 4, 1, 3))
	>>> m.print_sorted()
	[1, 2, 3, 4, 5]

check if you pass non intergers in a list
	>>> m = MyList(['d', 'c','b', 'z', 'a'])
	>>> m.print_sorted()
	['a', 'b', 'c', 'd', 'z']

check if you pass a mix of ints an non ints
	>>> m = MyList(['d', 'c', 5, 'z', 'a'])
	>>> m.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'int' and 'str'

check if you pass empty list
	>>> m = MyList([])
	>>> m.print_sorted()
	[]

check is you pass None
	>>> m = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

check if you pass on interger in the list
	>>> m = MyList([5])
	>>> m.print_sorted()
	[5]

checking if you pass more than one list
	>>> m = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2
